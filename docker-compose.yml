version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: telegram_ai_postgres
    environment:
      POSTGRES_DB: telegram_ai_bot
      POSTGRES_USER: bot_user
      POSTGRES_PASSWORD: bot_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - bot_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: telegram_ai_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bot_network
    restart: unless-stopped

  # Bot Application
  bot:
    build: .
    container_name: telegram_ai_bot
    environment:
      - DATABASE_URL=postgresql://bot_user:bot_password@postgres:5432/telegram_ai_bot
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - DEFAULT_AI_PROVIDER=${DEFAULT_AI_PROVIDER:-claude}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - bot_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  bot_network:
    driver: bridge 